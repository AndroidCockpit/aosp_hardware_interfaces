/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.hardware.health@2.0;

import @1.0::HealthInfo;
import @1.0::Result;

/**
 * Status values for HAL methods.
 */
enum Result : @1.0::Result {
    NOT_FOUND,
    CALLBACK_DIED,
};

struct HealthInfo {
    /**
     * Legacy information from 1.0 HAL.
     *
     * If a value is not available, it must be set to 0, UNKNOWN, or empty
     * string.
     */
    @1.0::HealthInfo legacy;

    /**
     * Average battery current in microamperes. Positive
     * values indicate net current entering the battery from a charge source,
     * negative values indicate net current discharging from the battery.
     * The time period over which the average is computed may depend on the
     * fuel gauge hardware and its configuration.
     *
     * If this value is not available, it must be set to 0.
     */
    int32_t batteryCurrentAverage;

    /**
     * Remaining battery capacity percentage of total capacity
     * (with no fractional part). This value must be in the range 0-100
     * (inclusive).
     *
     * If this value is not available, it must be set to 0.
     */
    int32_t batteryCapacity;

    /**
     * Battery remaining energy in nanowatt-hours.
     *
     * If this value is not available, it must be set to 0.
     */
    int64_t energyCounter;
};